<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arnoud Kleinloog | My Site</title>
    <link>/author/arnoud-kleinloog/</link>
      <atom:link href="/author/arnoud-kleinloog/index.xml" rel="self" type="application/rss+xml" />
    <description>Arnoud Kleinloog</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Dedicated to the public domain Â· [Unlicensed](https://github.com/akleinloog/akleinloog.github.io/blob/master/LICENSE) </copyright><lastBuildDate>Wed, 06 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/author/arnoud-kleinloog/avatar_hu52a603635ecebd45650b162dadabb4e5_12861_270x270_fill_q90_lanczos_center.jpg</url>
      <title>Arnoud Kleinloog</title>
      <link>/author/arnoud-kleinloog/</link>
    </image>
    
    <item>
      <title>Setting up this Blog - Part 1</title>
      <link>/post/my-blog-pt1/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/my-blog-pt1/</guid>
      <description>&lt;p&gt;This is the first in a series of posts detailing the set up of my personal blog. It details the basic set up that is needed to get started.&lt;/p&gt;
&lt;p&gt;I use 
&lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; as a static site generator and 
&lt;a href=&#34;https://code.visualstudio.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual Studio Code&lt;/a&gt; as editor. The resulting website is hosted using 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt;. A nice combination of open source tools with a free hosting provider that poses no restrictions in terms of traffic, size, etc.
Sounds like a perfect match to me.&lt;/p&gt;
&lt;p&gt;Familiarity with git and the command line are assumed. I use a Mac,en some of the commands may need to be translated to your environment.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Following this 
&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo tutorial&lt;/a&gt;, I created two repositories on GitHub.
One named &lt;em&gt;website&lt;/em&gt; for the 
&lt;a href=&#34;https://github.com/akleinloog/website&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sources&lt;/a&gt;, and another one for the 
&lt;a href=&#34;https://github.com/akleinloog/akleinloog.github.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;generated website&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The name of the repository for the generated website has to be specific in order for it to be picked up by GitHub Pages.
In my case: &lt;strong&gt;akleinloog.github.io&lt;/strong&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I decided to dedicate both repositories to the public domain and therefore used the 
&lt;a href=&#34;https://choosealicense.com/licenses/unlicense/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UNLICENSE&lt;/a&gt;.
Feel free to use anything you find here as you see fit.&lt;/p&gt;
&lt;p&gt;The next step is to clone the repository used for the source:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/&amp;lt;username here&amp;gt;/website.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And open the project in Visual Studio Code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd website
code .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following .gitignore file and optionally, save the code workspace:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# MacOS Files
.DS_Store

# Hugo Working Folders
resources/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install Hugo if not already installed:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And initialize your repository for Hugo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site . --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;select-a-theme&#34;&gt;Select a theme&lt;/h2&gt;
&lt;p&gt;A good overview of available themes can be found 
&lt;a href=&#34;https://jamstackthemes.dev&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.
Select Hugo and order the themes by Stars gives you an overview of the most used themes.&lt;/p&gt;
&lt;p&gt;I decided to try 
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt;, a feature rich, open source theme developed by George Cushen and made available under the 
&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license. Thanks George!&lt;/p&gt;
&lt;p&gt;Add the theme as a git submodule:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add https://github.com/gcushen/hugo-academic.git themes/academic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Familiarize yourself with Academic, and 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;customize&lt;/a&gt; it as you see fit.
A good way to do that, is to clone the 
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Kickstart&lt;/a&gt; project in a separate directory.
It provides a good demonstration of what the theme has to offer.&lt;/p&gt;
&lt;h2 id=&#34;try-it-out-locally&#34;&gt;Try it out locally&lt;/h2&gt;
&lt;p&gt;Experiment with the configuration options and the structure. Run the site in development mode using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The site will be available at http://localhost:1313.
Whenever you save your changes, Hugo will pick up on it and automatically refresh it, providing for a pleasant live-editing experience.&lt;/p&gt;
&lt;h2 id=&#34;get-ready-to-publish&#34;&gt;Get ready to publish&lt;/h2&gt;
&lt;p&gt;Add the repository for the generated website as a git submodule:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule add -b master https://github.com/&amp;lt;username here&amp;gt;/&amp;lt;username here&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Doing so ensures that the HTML and JavaScript generated by Hugo will be placed in that repository.&lt;/p&gt;
&lt;p&gt;First, we&amp;rsquo;ll do a manual run. Generate your website:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo -t academic
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Test the generated output using the 
&lt;a href=&#34;https://www.npmjs.com/package/serve&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;serve package&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public 
npx serve
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;automate-it&#34;&gt;Automate it&lt;/h2&gt;
&lt;p&gt;Add a file called deploy.sh to the sources repository&amp;rsquo;s main folder. Ensure it is executable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod +x deploy.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the following content to that file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh

set -e

echo &amp;quot;Cleaning Publish Folder&amp;quot;

rm -r ./public/*

echo &amp;quot;Running Hugo Build&amp;quot;

hugo -t academic

cd public

echo &amp;quot;Adding changes to git&amp;quot;

git add .

msg=&amp;quot;regenerating site content $(date)&amp;quot;

git commit -m &amp;quot;$msg&amp;quot;

echo &amp;quot;Pushing to master&amp;quot;

git push origin master

cd ..

echo &amp;quot;Deployment Finished&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This script uses Hugo to generate your website and commit the changes to the website&amp;rsquo;s repository.
By pushing these changes to GitHub, the script effectively deploys your website to production!&lt;/p&gt;
&lt;p&gt;I hope you have enjoyed this as much as I did, in Part 2 I will add google analytics, support for comments and most likely also a contact page.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
